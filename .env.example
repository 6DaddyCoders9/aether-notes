# .env.example file

# Backend Configuration
# --------------------
# FastAPI server host and port
FASTAPI_HOST=0.0.0.0
FASTAPI_PORT=8000

# PostgreSQL Database Configuration
# These values should match your PostgreSQL service setup.
POSTGRES_USER=your_postgres_user
POSTGRES_PASSWORD=your_postgres_password
POSTGRES_DB=your_postgres_db_name
POSTGRES_HOST=db # For Docker Compose, this is often the service name (e.g., 'db')
POSTGRES_PORT=5432

# Mailgun Credentials
MAILGUN_API_KEY=your_mailgun_api_key
MAILGUN_DOMAIN=your_mailgun_sandbox_domain
MAIL_FROM_EMAIL=test@your_mailgun_sandbox_domain

# Google OAuth Credentials
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_REDIRECT_URI=http://localhost:8000/api/v1/auth/google/callback # Your backend's OAuth callback URL

# Supabase Credentials
SUPABASE_URL=your_supabase_project_url
SUPABASE_KEY=your_supabase_service_role_key # Use your Supabase 'service_role' key for backend operations

<<<<<<< HEAD
# JWT Token Configuration
# IMPORTANT: Generate a strong, random key for production!
SECRET_KEY=a_very_long_and_random_secret_key_for_jwt_signing
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# AI Engine Configuration
# Define the directory for ChromaDB storage within the backend container.
# This path is relative to the backend WORKDIR (/app).
CHROMA_DB_DIRECTORY=chroma_db
# Define the Hugging Face embedding model to use for document processing.
HUGGING_FACE_EMBEDDING_MODEL=all-MiniLM-L6-v2

# Frontend Configuration
# --------------------
# The URL where your frontend dashboard is accessible.
FRONTEND_URL=http://localhost:3000/dashboard
# The port your frontend service is running on.
FRONTEND_PORT=3000

# Add any other environment variables your application might use.
=======
# Dashboard Url
FRONTEND_URL=your_dashboard_url

#Logout redis secret key
SECRET_KEY=your_secret_key
>>>>>>> 10335c6 (updated env.example to have secret key)
